(()=>{"use strict";const e=()=>{},t={onClick:e,onMouseMove:e,onMouseEnter:e,onMouseLeave:e,onScroll:e},n=[{VERTICAL_PARALLAX_ENABLED:!1,HORIZONTAL_PARALLAX_ENABLED:!0,MOUSEMOVE_PARALLAX_SPEED:.1,SCROLL_PARALLAX_SPEED:.5,MOUSEMOVE_ENABLED:!0,SCROLL_ENABLED:!0},{VERTICAL_PARALLAX_ENABLED:!1,HORIZONTAL_PARALLAX_ENABLED:!0,MOUSEMOVE_PARALLAX_SPEED:.1,SCROLL_PARALLAX_SPEED:10,MOUSEMOVE_ENABLED:!0,SCROLL_ENABLED:!0}];class s{static getPosition(e){let t=0,n=0,s=e;for(;s;){if("BODY"==e.tagName){const o=s.scrollLeft||document.documentElement.scrollLeft,l=s.scrollTop||document.documentElement.scrollTop;t+=s.offsetLeft-o+e.clientLeft,n+=s.offsetTop-l+e.clientTop}else t+=s.offsetLeft-s.scrollLeft+s.clientLeft,n+=s.offsetTop-s.scrollTop+s.clientTop;s=s.offsetParent}return{x:t,y:n}}}s.isEqual=(...e)=>e.every((t=>JSON.stringify(t)===JSON.stringify(e[0])));!function(){const e=document.getElementsByClassName("parallaxScene");new class{constructor(e){this.parallaxScenes=[];for(let t=0;t<e.length;t++){const n=e[t],s=n.children,o={element:n,children:[],zIndex:0,scrollHeight:window.scrollY,frameId:t},l=this.constructScene(o);n.ondragstart=()=>!1;for(let e=0;e<s.length;e++){const t=s[e],n=isNaN(Number(t.getAttribute("zIndex")))?NaN:Number(t.getAttribute("zIndex")),o=isNaN(Number(t.getAttribute("orientation")))?NaN:Number(t.getAttribute("orientation"));if(0===n){t.style.zIndex=String(n),t.ondragstart=()=>!1;const s={element:t,zIndex:n,orientation:o,top:Number(t.style.top),left:Number(t.style.left),elementId:e};l.frame.children.push(s)}else if(n&&o){t.style.zIndex=String(n),t.ondragstart=()=>!1;const s={element:t,zIndex:n,orientation:o,top:Number(t.style.top),left:Number(t.style.left),elementId:e};l.frame.children.push(s)}else console.log(`Invalid zIndex or orientation on element ${t.getAttribute("id")}, check they are number-strings`)}this.parallaxScenes.push(l)}console.log(this.parallaxScenes)}startAllScenes(){this.parallaxScenes.forEach((e=>{this.startScene(e)}))}endAllScenes(){this.parallaxScenes.forEach((e=>{this.endScene(e)}))}startScene(e){console.log("starting scene"),this.activateListeners(e)}endScene(e){console.log("ending scene"),this.deactivateListeners(e)}activateListeners(e){e.frame.element.addEventListener("click",e.listeners.onClick),e.frame.element.addEventListener("mousemove",e.listeners.onMouseMove),e.frame.element.addEventListener("mouseleave",e.listeners.onMouseLeave),e.frame.element.addEventListener("mouseenter",e.listeners.onMouseEnter),document.addEventListener("scroll",e.listeners.onScroll)}deactivateListeners(e){e.frame.element.removeEventListener("click",e.listeners.onClick),e.frame.element.removeEventListener("mousemove",e.listeners.onMouseMove),e.frame.element.removeEventListener("mouseleave",e.listeners.onMouseLeave),e.frame.element.removeEventListener("mouseenter",e.listeners.onMouseEnter),document.removeEventListener("scroll",e.listeners.onScroll)}constructScene(e){return{frame:e,listeners:this.getSceneListeners(e),mousePos:{x:0,y:0},sceneId:this.parallaxScenes.length}}getScene(e){let n={frame:e,listeners:t,mousePos:{x:0,y:0},sceneId:-1},o=!1;return this.parallaxScenes.forEach((t=>{s.isEqual(t.frame,e)&&(o=!0,n=t)})),o||(n=this.constructScene(e)),n}getSceneListeners(e){return{onClick:t=>{this.handleClick(t,e)},onMouseMove:t=>{this.handleMouseMove(t,e)},onMouseEnter:t=>{this.handleMouseEnter(t,e)},onMouseLeave:t=>{this.handleMouseLeave(t,e)},onScroll:t=>{this.handleScroll(t,e)}}}handleMouseLeave(e,t){const n=this.getScene(t);n.mousePos.x=e.x,n.mousePos.y=e.y,console.log("mouse left scene")}handleMouseEnter(e,t){const n=this.getScene(t);n.mousePos.x=e.x,n.mousePos.y=e.y,console.log("mouse entered scene")}handleClick(e,t){const n=e,s={x:n.pageX,y:n.pageY};this.getRelativeMousePos(s,t),console.log("click")}handleMouseMove(e,t){const s=this.getScene(t);t.children.forEach((o=>{const l=e.x-s.mousePos.x,r=e.y-s.mousePos.y,i=n[t.frameId],c=Math.pow(o.zIndex,2),a=i.MOUSEMOVE_PARALLAX_SPEED,L=window.innerWidth/1920;i.HORIZONTAL_PARALLAX_ENABLED&&(o.left+=a*L*o.orientation*l*c,o.element.style.left=`${o.left}px`),i.VERTICAL_PARALLAX_ENABLED&&(o.top+=a*L*o.orientation*r*c,o.element.style.top=`${o.top}px`)})),s.mousePos.x=e.x,s.mousePos.y=e.y}handleScroll(e,t){const s=n[t.frameId];if(s.SCROLL_ENABLED){const e=window.scrollY-t.scrollHeight;t.children.forEach((t=>{const n=Math.pow(t.zIndex,2),o=s.SCROLL_PARALLAX_SPEED,l=window.innerWidth/1920;s.HORIZONTAL_PARALLAX_ENABLED&&(t.left+=o*l*t.orientation*e*n,t.element.style.left=`${t.left}px`)})),t.scrollHeight=window.scrollY}}getRelativeMousePos(e,t){const n=s.getPosition(t.element),o={x:e.x-n.x,y:e.y-n.y};return console.log(o),o}}(e).startAllScenes()}()})();